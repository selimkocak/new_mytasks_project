Aşağıdaki iş planı, istediğiniz özellikleri eklemek ve proje üzerinde çalışırken daha düzenli olmak için kullanabilirsiniz.

+1. Task modelindeki `team_membership` alanını `team` olarak değiştirin ve ForeignKey ilişkisini `Team` modeline ayarlayın.
+2. `Task` modeline `viewers` adında bir ManyToManyField alanı ekleyin, `AppUser` modelini hedef alın ve `related_name` olarak 'viewed_tasks' kullanın.
+3. TaskViewSet içerisinde `get_queryset` metodunu, kullanıcının hem sahibi olduğu hem de izleyici olarak eklendiği görevleri döndürecek şekilde güncelleyin.
+4. TaskViewSet içerisinde `create` ve `update` metodlarını, görevi oluşturan veya düzenleyen kullanıcının takım üyeleri arasında olduğunu doğrulayacak şekilde güncelleyin.
+5. TaskViewSet içerisindeki `permission_classes` listesine `IsTeamLeader` adında yeni bir permission class ekleyin.
+6. `IsTeamLeader` permission classını backend\api\permissions.py içerisinde tanımlayın.
+7. `IsTeamLeader` permission classında, kullanıcının takım lideri olup olmadığını kontrol eden bir `has_permission` metodu tanımlayın.
+8. TaskViewSet içerisinde `destroy` ve `partial_update` metodlarını, sadece takım lideri veya görevin sahibi olduğunda çalışacak şekilde güncelleyin.
+9. `UserTeamsAPIView` ve `UserFilteredTeamsAPIView` sınıflarını backend\api\views.py içerisinde birleştirin ve tek bir sınıf haline getirin.
+10. Yeni birleştirilmiş sınıfın queryset'i, kullanıcının hem yönetici hem de üye olduğu takımları döndürecek şekilde güncelleyin.
+11. TeamViewSet içerisinde `create` metodunu, takımın liderini otomatik olarak takım üyelerine ekleyecek şekilde güncelleyin.
+12. TeamViewSet içerisinde `update` metodunu, takım liderini değiştiren kullanıcıların sadece takımın mevcut lideri veya yönetici olduğunu doğrulayacak şekilde güncelleyin.
+13. TeamViewSet içerisindeki `permission_classes` listesine `IsTeamLeaderOrAdmin` adında yeni bir permission class ekleyin.
+14. `IsTeamLeaderOrAdmin` permission classını backend\api\permissions.py içerisinde tanımlayın.
+15. `IsTeamLeaderOrAdmin` permission classında, kullanıcının takım lideri veya yönetici olup olmadığını kontrol eden bir `has_permission` metodu tanımlayın.
+16. TeamViewSet içerisinde `partial_update` ve `destroy` metodlarını, sadece takım lideri veya yönetici olduğunda çalışacak şekilde güncelleyin.
+17. TaskViewSet'te, takım lideri tarafından oluşturulan görevlerin otomatik olarak takımın tüm üyelerine görünür olmasını sağlayacak şekilde güncelleyin.
+18. TaskViewSet içerisinde `list` metodunu, görevlerin takım üyelerine göre filtrelenmesini sağlayacak şekilde güncelleyin.
+19. `Team` modeline, takımın liderini ve üyelerini değiştiren fonksiyonlar (ör. `add_member`, `remove_member`, `set_leader`) ekleyin.
+20. `AppUser` modeline, kullanıcının takıma üye olup olmadığını kontrol eden bir fonksiyon (ör. `is_member_of_team`) ekleyin.
+21. TaskViewSet içerisinde, görevlerin filtrelenmesi için yeni bir fonksiyon (ör. `filter_tasks_by_team`) ekleyin ve bu fonksiyonu `list` metodunda kullanın.
+22. TaskViewSet içerisinde, görevlerin takım üyelerine atanmasını sağlayacak bir fonksiyon (ör. `assign_task_to_team_members`) ekleyin ve bu fonksiyonu `create` metodunda kullanın.
+23. TaskViewSet içerisinde, görevlerin takım üyelerinden kaldırılmasını sağlayacak bir fonksiyon (ör. `remove_task_from_team_members`) ekleyin ve bu fonksiyonu `destroy` metodunda kullanın.
24. `Task` modelinde, görevin durumunu güncelleyen bir fonksiyon (ör. `update_status`) ekleyin ve bu fonksiyonu TaskViewSet içerisinde kullanın.
25. TaskViewSet içerisinde, görevlerin takım lideri tarafından yönetilmesini sağlayacak `retrieve`, `update` ve `destroy` metodlarını düzenleyin.
26. TaskViewSet içerisinde, takım lideri ve üyelerin görevleri görüntülemesini sağlayacak şekilde `retrieve` metodunu güncelleyin.
27. TaskViewSet içerisinde, görevleri tamamlayan ve takım üyelerine görev atayan fonksiyonlar (ör. `complete_task`, `assign_task_to_member`) ekleyin.
28. TaskViewSet içerisinde, görevlerin sıralanması için gerekli parametreleri (ör. tarih, durum) alan ve kullanıcıya göre filtreleyen bir fonksiyon (ör. `order_tasks_by_params`) ekleyin.
29. TaskViewSet içerisinde, görevlerin sıralanması ve filtrelenmesi için yeni bir fonksiyon (ör. `filter_and_order_tasks`) ekleyin ve bu fonksiyonu `list` metodunda kullanın.
30. `Team` modelinde, takımın proje süresini ve görevlerin sürelerini hesaplayan bir fonksiyon (ör. `calculate_project_duration`) ekleyin.
31. TaskViewSet içerisinde, görevlerin sürelerini ve takımın proje süresini hesaplayan bir fonksiyon (ör. `calculate_durations`) ekleyin ve bu fonksiyonu `list` metodunda kullanın.
32. `Team` modelinde, takımın performansını değerlendiren bir fonksiyon (ör. `evaluate_performance`) ekleyin.
33. TaskViewSet içerisinde, takımın performansını değerlendiren bir fonksiyon (ör. `evaluate_team_performance`) ekleyin ve bu fonksiyonu `list` metodunda kullanın.
34. TaskViewSet içerisinde, takım üyelerinin performansını değerlendiren bir fonksiyon (ör. `evaluate_member_performance`) ekleyin ve bu fonksiyonu `list` metodunda kullanın.
35. TaskViewSet içerisinde, kullanıcıların kendi görevlerini ve takım görevlerini görüntüleyebilmesi için `list` metodunu güncelleyin.
36. TaskViewSet içerisinde, kullanıcıların kendi görevlerini ve takım görevlerini tamamlayabilmesi için `update` metodunu güncelleyin.
37. TaskViewSet içerisinde, kullanıcıların kendi görevlerini ve takım görevlerini silebilmesi için `destroy` metodunu güncelleyin.
38. TaskViewSet içerisinde, kullanıcıların görevlerini ve takım görevlerini durumlarına göre filtreleyebilmeleri için `list` metodunu güncelleyin.
39. TaskViewSet içerisinde, kullanıcıların görevlerini ve takım görevlerini tarihlerine göre sıralayabilmeleri için `list` metodunu güncelleyin.
40. Son olarak, tüm işlemleri test edin ve gerekli düzeltmeleri yaparak projeyi tamamlayın.

Kodunuzu inceleyemediğim için doğrudan hatalı kısımları belirleyemiyorum, ancak son 17 maddeden bazılarını iş planınıza nasıl ekleyeceğinize dair önerilerde bulunabilirim.

24. `update_status` fonksiyonunu Task modeline ekledikten sonra, TaskViewSet içinde `update` metodunu güncellemelisiniz. Bu fonksiyonu kullanarak görevin durumunu güncelleyin.
25. `retrieve`, `update` ve `destroy` metodlarını, sadece takım liderinin görevleri yönetebileceği şekilde güncellemek için, önceden oluşturulan `IsTeamLeader` permission class'ını kullanın.
26. `retrieve` metodunu güncelleyin, böylece takım lideri ve üyelerin görevleri görüntüleyebilmesini sağlayın. Bunu yapmak için `get_queryset` metodunu kullanarak, sadece kullanıcının sahip olduğu veya izleyici olarak eklendiği görevleri görüntülemesini sağlayın.
27. `complete_task` ve `assign_task_to_member` gibi fonksiyonları TaskViewSet içinde ekleyin ve bu fonksiyonları `update` metodunda kullanarak, görevleri tamamlayan ve takım üyelerine görev atayan işlemleri gerçekleştirin.
28. `order_tasks_by_params` gibi bir fonksiyon oluşturun ve bu fonksiyonu `list` metodunda kullanarak, görevlerin tarih, durum vb. parametrelere göre sıralanmasını sağlayın.
29. `filter_and_order_tasks` gibi bir fonksiyon oluşturun ve bu fonksiyonu `list` metodunda kullanarak, görevlerin filtrelenmesi ve sıralanması işlemlerini gerçekleştirin.
30. `calculate_project_duration` fonksiyonunu Team modeline ekleyin.
31. TaskViewSet içinde `calculate_durations` fonksiyonunu ekleyin ve bu fonksiyonu `list` metodunda kullanarak, görev sürelerini ve takımın proje süresini hesaplayın.
32. `evaluate_performance` fonksiyonunu Team modeline ekleyin.
33. TaskViewSet içinde `evaluate_team_performance` fonksiyonunu ekleyin ve bu fonksiyonu `list` metodunda kullanarak, takımın performansını değerlendirin.
34. TaskViewSet içinde `evaluate_member_performance` fonksiyonunu ekleyin ve bu fonksiyonu `list` metodunda kullanarak, takım üyelerinin performansını değerlendirin.
35 - 39 maddeleri, daha önce bahsettiğim `list`, `update` ve `destroy` metodlarını güncelleyerek gerçekleştirilebilir. Bu işlemler için önceden oluşturulan fonksiyonları kullanarak, kullanıcının kendi görevleri ve takım görevlerini yönetebilmesini sağlayın.
40. Testlerinizi gerçekleştirin, gerekli düzeltmeleri yaparak projeyi tam